<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAABFlJREFUWEft
        1l1MW2Ucx/HHWy+MusQMZUUQlISoYQgFBVqgjBebGZAmsFlgvAk1MzHTJTDNbljMtKMwtiw60YsBLTC2
        ZYsMdYvGlxgvvVETkyXGeKHeoHEGejjPz995dsrrWXdoCXEJT/IJvSj5f/mfc0rFXXH02REhXxkWsjok
        ZMdJIQ8ovRSioC3tQ0HZNhSEezKIootBFE/bNUDv0L1wTwk8MSv4+0J/612zjkefGxP6lQ+EdA0IuX9I
        yDYV+AfBtvYhMBAMBAeAAzemZHoHnr0g8MDXQn/7mNBu1Jt1PDoiNCHkRUaWMtKvIn+xDLmdZAJL6Lnp
        B404efS4iKKAnGYdjz7PDepkRE6dvbXJ5pM/M9I6xkqigUZc8XQUO766X/aeUHGa5hHanNes49EXGKci
        x29FjjFy7+APstUi5HaS2eDjnyzIw0ZcodAWKxj3vND+rjXreBj4Ms0y8qqO8Awv+Yx87dRN+eKgdYyV
        RAPzLvP9F6R2s/qahtKPGXeVcbMUMPNU4ChBkePQMQ7ZexqybgsCcxlYNgnt9xegwQOGxUTMPBUYWhd4
        mIH1WxC4m4GuKWi/1TGwYmXgsJm3HRjfdmDMduB24G1sB8ZsWSDjVGAzh+YFISsH4vNQbQiyk4GMVIHG
        N5SsT4GdXwIPfx7ffd8AjuvQfq1nYLmNwEUGkpwZgRx9H/L82fgu8X1n3uO2GWkEVkSA9GuQgVPQPzwE
        /fSb8Q0ehX7mCLQ/90Jb2GMjcN6ECE3YMKl+yteHIb0D/Od/BXjmMjRZhiieJqcNhdD+qQG/ydgI3KjY
        H/PTR5BVJ4CHvoA++gaH5kP7y7ty4EZtUqBBI4QhD50DnCOISt5Lqy9XIjYx0Nyi/P4SFq+3cHtFay9X
        IjYxUDHux3E+ibzZ51Z9XCRqORAyzEcwjORM0QSw0AD8Ww7M1yZrRSAiIUJyzhM/AzUfEGVglEOSsxzY
        13swREjGkb5XlQOtNdi/z41mvydZy4ENDS+FCMnw+fxKfsEePPmUG7m7y5O1HNje3h4iJKOjo0OpqqqC
        2+1GRUVFsu6uwPG1A+Npa2tDV1cXenp60N3drRivDV6vF5WVlaiurlZqampUtEXAnUyZeSqwmSIUtoMh
        Yy0tLZ/5fD40NjYqTU1NSnFxMfLz81FYWKgUFBSgpKTkW4aOcWjYpgi1mnkq0BZuTnBbwu/3C15GlxFT
        WlqquFwuJSMjA6mpqUhLS1McDofxs6eoqEhwk4KDbVs6VjFWuDnBrQmn0ym4lXNlZWXqfjMYrw2ZmZkq
        Kj09XTGCGfhdSkqKyMvLE9ykZYyVpWMVY9pJjphAILCrrq7uUW7soHFfrRS753JycpCVlYXs7OxVGHs8
        Nzf3MQbu4nDHCo8YMVaWjhlj5Uda9YDEnta1Ojs7FSPS2KTH41mHQ63M0z2UUOANWhdohCQSaOBgKwkH
        BugY9d8JIxVe7n7ek/0cYFcfxQ/8/x4h/gPEHK4sktxbVgAAAABJRU5ErkJggg==
</value>
  </data>
</root>